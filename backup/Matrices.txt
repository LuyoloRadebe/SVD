
M[0,0] := 4;
M[0,1] := 2;
M[0,2] := 0;
M[0,3] := 1;
M[0,4] := 8;
M[0,5] := 9;
M[0,6] := 9;
M[0,7] := 5;
M[0,8] := 7;
M[0,9] := -7;
M[0,10] := 0;
M[0,11] := 1;
M[1,0] := 2;
M[1,1] := 3;
M[1,2] := -1;
M[1,3] := 6;
M[1,4] := 3;
M[1,5] := 5;
M[1,6] := 9;
M[1,7] := 5;
M[1,8] := 7;
M[1,9] := -7;
M[1,10] := 0;
M[1,11] := 1;
M[2,0] := 0;
M[2,1] := -1;
M[2,2] := 9;
M[2,3] := 0;
M[2,4] := 11;
M[2,5] := 7;
M[2,6] := 9;
M[2,7] := 5;
M[2,8] := 7;
M[2,9] := -7;
M[2,10] := 0;
M[2,11] := 1;
M[3,0] := 1;
M[3,1] := 6;
M[3,2] := 0;
M[3,3] := 1;
M[3,4] := 12;
M[3,5] := -7;
M[3,6] := 9;
M[3,7] := 5;
M[3,8] := 7;
M[3,9] := -7;
M[3,10] := 0;
M[3,11] := 1;
M[4,0] := 8;
M[4,1] := 3;
M[4,2] := 11;
M[4,3] := 12;
M[4,4] := 6;
M[4,5] := 0;
M[4,6] := 9;
M[4,7] := 5;
M[4,8] := 7;
M[4,9] := -7;
M[4,10] := 0;
M[4,11] := 1;
M[5,0] := 9;
M[5,1] := 5;
M[5,2] := 7;
M[5,3] := -7;
M[5,4] := 0;
M[5,5] := 1;
M[5,6] := 9;
M[5,7] := 5;
M[5,8] := 7;
M[5,9] := -7;
M[5,10] := 0;
M[5,11] := 1;
M[6,0] := 9;
M[6,1] := 5;
M[6,2] := 7;
M[6,3] := -7;
M[6,4] := 0;
M[6,5] := 1;
M[6,6] := 9;
M[6,7] := 5;
M[6,8] := 7;
M[6,9] := -7;
M[6,10] := 0;
M[6,11] := 1;
M[7,0] := 9;
M[7,1] := 5;
M[7,2] := 7;
M[7,3] := -7;
M[7,4] := 0;
M[7,5] := 1;
M[7,6] := 9;
M[7,7] := 5;
M[7,8] := 7;
M[7,9] := -7;
M[7,10] := 0;
M[7,11] := 1;
M[8,0] := 9;
M[8,1] := 5;
M[8,2] := 7;
M[8,3] := -7;
M[8,4] := 0;
M[8,5] := 1;
M[8,6] := 9;
M[8,7] := 5;
M[8,8] := 7;
M[8,9] := -7;
M[8,10] := 0;
M[8,11] := 1;
M[9,0] := 9;
M[9,1] := 5;
M[9,2] := 7;
M[9,3] := -7;
M[9,4] := 0;
M[9,5] := 1;
M[9,6] := 9;
M[9,7] := 5;
M[9,8] := 7;
M[9,9] := -7;
M[9,10] := 0;
M[9,11] := 1;
M[10,0] := 2;
M[10,1] := 3;
M[10,2] := -1;
M[10,3] := 6;
M[10,4] := 3;
M[10,5] := 5;
M[10,6] := 9;
M[10,7] := 5;
M[10,8] := 7;
M[10,9] := -7;
M[10,10] := 0;
M[10,11] := 1;
M[11,0] := 2;
M[11,1] := 3;
M[11,2] := -1;
M[11,3] := 6;
M[11,4] := 3;
M[11,5] := 5;
M[11,6] := 9;
M[11,7] := 5;
M[11,8] := 7;
M[11,9] := -7;
M[11,10] := 0;
M[11,11] := 1;

M[0,0] := 4;
M[0,1] := 2;
M[0,2] := 0;
M[0,3] := 1;
M[0,4] := 8;
M[0,5] := 9;
M[1,0] := 2;
M[1,1] := 3;
M[1,2] := -1;
M[1,3] := 6;
M[1,4] := 3;
M[1,5] := 5;
M[2,0] := 0;
M[2,1] := -1;
M[2,2] := 9;
M[2,3] := 0;
M[2,4] := 11;
M[2,5] := 7;
M[3,0] := 1;
M[3,1] := 6;
M[3,2] := 0;
M[3,3] := 1;
M[3,4] := 12;
M[3,5] := -7;
M[4,0] := 8;
M[4,1] := 3;
M[4,2] := 11;
M[4,3] := 12;
M[4,4] := 6;
M[4,5] := 0;
M[5,0] := 9;
M[5,1] := 5;
M[5,2] := 7;
M[5,3] := -7;
M[5,4] := 0;
M[5,5] := 1;

        J := 0;
    while (J) < (High(SubEigen)+1) do
      begin
      if abs(NewGuess-Eigen[J,J])<(Tol) then
        begin
        flag := 1;
        WriteLn('Flag set!!!',Eigen[J,J]);
        end;
        J := J+1;
      end;
